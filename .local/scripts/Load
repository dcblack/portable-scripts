#!/usr/bin/env bash
#
# Load a script (do NOT execute)

export LOADED

function Syntax() { if [[ "$1" =~ ^-{1,2}h(elp)? ]]; then shift; echo "Syntax: $*"; return 1; fi }

function Load() {
  Syntax "$1" "Load [-v] SCRIPTNAME" || return
  local VERBOSE DIR SCRIPT
  VERBOSE=0
  if [[ "$1" == "-v" ]]; then
    VERBOSE=1
    shift
  fi
  if [[ "${SHELL}" == /bin/zsh ]]; then
    set -o shwordsplit
  fi
  if [[ -z "${SCRIPT_PATH+x}" ]]; then
    # Missing SCRIPT_PATH! Attempt default locations.
    for DIR in "${HOME}/scripts" "${HOME}/.local/scripts" ; do
      if [[ -d "${DIR}" ]]; then
        if [[ "${SCRIPT_PATH}" =~ : ]]; then
          SCRIPT_PATH="${SCRIPT_PATH}:${DIR}"
        else
          SCRIPT_PATH="${DIR}"
        fi
      fi
    done
  fi
  export SCRIPT_PATH
  local prev_IFS
  prev_IFS="${IFS}"
  IFS=':'
  local prev_NOAUTORUN
  prev_NOAUTORUN=""
  if [[ -n "${NOAUTORUN}" ]]; then
    prev_NOAUTORUN="${NOAUTORUN}"
  fi
  NOAUTORUN=1
  export NOAUTORUN
  for DIR in ${SCRIPT_PATH}; do
    IFS="${prev_IFS}"
    SCRIPT="${DIR}/$1"
    if [[ -x "${SCRIPT}" ]]; then
      if [[ "${VERBOSE}" == 1 ]]; then
        Info "Loading ${SCRIPT}"
      fi
      # shellcheck disable=SC1090
      source "${SCRIPT}" "$@"
      return $?
    fi
  done
  if [[ -n "${prev_NOAUTORUN}" ]]; then
    NOAUTORUN="${prev_NOAUTORUN}"
  else
    unset NOAUTORUN
  fi
  Error "Unable to find suitable script '$1'"
}

function Unload()
{
  true
}

function Reload()
{
  true
}
