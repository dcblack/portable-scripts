#!/usr/bin/env bash

function Remove_path() {
  export Remove_path_VERSION=1.4
  # USAGE: remove_path [-sep char] VAR PATH
  if [[ "$1" =~ ^[_A-Za-z][-_A-Za-z0-9]*$ ]]; then
    local PLSCRIPT EVALSCRIPT VAR VAL SEP REMOVE
    SEP=':'
    if [[ "$1" == "-sep" ]]; then
      if [[ "$2" =~ ^[[:punct]]$ ]]; then
        SEP="$2"
        shift; shift
      else
        Report_error "Remove_path -sep requires single restricted character argument"; return 1;
      fi
    fi
    if [[ $# != 2 ]]; then Report_error "Remove_path requires two arguments"; return 1; fi
    VAR="$1"
    REMOVE="$2"
    eval "VAL=\$${VAR}"
    if [[ -z "${VAL}" ]]; then Report_error "${VAR} is empty!?"; return 1; fi
    # shellcheck disable=SC2016
    PLSCRIPT='
    ($s,$v,$p)=@ARGV;
    $p=abs_path($p);
    @o=split(m{$s},$ENV{$v});
    for$o(@o){
      $e=abs_path($o);
      push(@e,$o) if $p ne $e;
    } printf qq{$v="%s"\n},join(qq{$s},@e);
    '
    EVALSCRIPT="$(/usr/bin/env "${VAR}=${VAL}" /usr/bin/perl -M'Cwd(abs_path)' -e "${PLSCRIPT}" "${SEP}" "${VAR}" "${REMOVE}")"
    eval "${EVALSCRIPT}"
  else
    Report_error "Remove_path requires first argument be a simple variable name"
    return 1
  fi
}
# vim:nospell
