#!/bin/bash
#
# Steps to build and install fmtlib (useful prior to C++20)

#-------------------------------------------------------------------------------
# The following is formatted for use with -help
#|
#|NAME
#|----
#|
#|  $0 - build and install fmtlib from github source
#|
#|SYNOPSIS
#|--------
#|
#|  $0 -help
#|  $0 [OPTIONS...]
#|
#|DESCRIPTION
#|-----------
#|
#|  Downloads, unpacks, builds and installs the latest or specified version of fmtlib.
#|
#|OPTIONS
#|-------
#|
#|  Option             |  Alternative      | Description
#|  ------             |  ------------     | -----------
#|  --cc=C_COMPILER    |  CC=C_COMPILER    | chooses C compiler executable
#|  --clang            |                   | quick --cc=clang --cxx=clang++
#|  --cxx=CPP_COMPILER |  CXX=CPP_COMPILER | chooses C++ compiler executable
#|  --debug            |                   | developer use
#|  --default          |                   | quick -i=$HOME/.local -src=$HOME/.local/src
#|  --gcc              |                   | quick --cc=gcc --cxx=g++
#|  --home             |                   | quick -i $HOME -s $HOME/src
#|  --install=DIR      |  -i DIR           | choose installation directory
#|  --src=DIR          |  -s DIR           | choose source directory
#|  --std=N            |  -std=N           | set make C++ compiler version where N={98,11,14,17,20,...}
#|  --suffix=TEXT      |  -suf TEXT        | set suffix for installation name
#|

SCRIPT="$(dirname "$0")/utils.bash"
if [[ -f "${SCRIPT}" ]]; then
  # shellcheck source=utils.bash
  source "${SCRIPT}" "$0"
else
  echo "Error: Missing ${SCRIPT}" 1>&2; exit 1
fi

# shellcheck source=get-build-opts.bash
GetBuildOpts "$0" "$@"

TARGET='fmt'
GIT_URL="https://github.com/fmtlib/fmt.git"
BUILD=build-cmake-"$(basename "${CC}")"
CMAKE_INSTALL_PREFIX="$(dirname ${APPS})/share"


SRC="${HOME}/.local/src"
mkdir -p "${SRC}" || Die "Unable to create ${SRC}"
cd "${SRC}" || Die "Unable to enter source directory ${SRC}"
Do rm -fr ${TARGET}
Do git clone "${GIT_URL}" || Die "Unable to fetch repo"
cd "./${TARGET}" || Die "Unable to enter repo"
mkdir "${BUILD}" || Die "Unable to create ${BUILD}"
cd ${BUILD} || Die "Unable to enter ${BUILD}"
Do cmake\
   -DCMAKE_INSTALL_PREFIX="${CMAKE_INSTALL_PREFIX}"\
   ..
Do make
Do make install
cat <<"EOF"
${CBLU}
-------------------------------------------------------------------------------
* Built $TARGET under ${SRC}/${TARGET}.
* Installed ${TARGET} under ${CMAKE_INSTALL_PREFIX}.
-------------------------------------------------------------------------------
${NONE}
EOF
