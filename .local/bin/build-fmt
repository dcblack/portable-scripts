#!/usr/bin/env bash
#
# Script to build and install fmtlib (useful prior to C++20)
TOOL_NAME="C++ formatting library (fmt)"
TOOL_INFO="Go to 'https://fmt.dev/latest/index.html' for more information."
TOOL_SRC='fmt'
TOOL_URL="https://github.com/fmtlib/fmt.git"
GENERATOR="cmake"

#-------------------------------------------------------------------------------
# The following is formatted for use with -help
#|
#|NAME
#|----
#|
#|  $0 - build and install fmtlib from github source
#|
#|SYNOPSIS
#|--------
#|
#|  $0 -help
#|  $0 [OPTIONS...]
#|
#|DESCRIPTION
#|-----------
#|
#|  Downloads, unpacks, builds and installs the latest or specified version of fmtlib.
#|
#|OPTIONS
#|-------
#|
#|  Option             |  Alternative      | Description
#|  ------             |  ------------     | -----------
#|  --cc=C_COMPILER    |  CC=C_COMPILER    | chooses C compiler executable
#|  --clang            |                   | quick --cc=clang --cxx=clang++
#|  --cxx=CPP_COMPILER |  CXX=CPP_COMPILER | chooses C++ compiler executable
#|  --debug            |                   | developer use
#|  --default          |                   | quick -i=$HOME/.local -src=$HOME/.local/src
#|  --gcc              |                   | quick --cc=gcc --cxx=g++
#|  --home             |                   | quick -i $HOME -s $HOME/src
#|  --install=DIR      |  -i DIR           | choose installation directory
#|  --src=DIR          |  -s DIR           | choose source directory
#|  --std=N            |  -std=N           | set make C++ compiler version where N={98,11,14,17,20,...}
#|  --suffix=TEXT      |  -suf TEXT        | set suffix for installation name
#|

function Realpath () {
  /usr/bin/perl '-MCwd(abs_path)' -le "print abs_path(qq($*)) if -e qq($*)"
}

SCRIPT="$(dirname $(Realpath "$0"))/utils.bash"
if [[ -x "${SCRIPT}" ]]; then
  # shellcheck source=utils.bash
  source "${SCRIPT}" "$0"
else
  echo "Error: Missing ${SCRIPT}" 1>&2; exit 1
fi

GetBuildOpts "$0" "$@"
ConfirmBuildOpts || exit

Create_and_Cd "${SRC}"
GetSource_and_Cd "${TOOL_SRC}" "${TOOL_URL}"

Generate "${GENERATOR}"
_do make
_do make install
echo "
${CBLU}
-------------------------------------------------------------------------------
* Built ${TOOL_SRC} under ${SRC}/${TOOL_SRC}.
* Installed ${TOOL_SRC} under ${CMAKE_INSTALL_PREFIX}.
-------------------------------------------------------------------------------
${NONE}
"
