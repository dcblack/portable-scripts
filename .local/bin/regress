#!/usr/bin/env bash
#
# Run solutions


function Realpath() {
  /usr/bin/perl '-MCwd(abs_path)' -le '$p=abs_path(join(q( ),@ARGV));print $p if -e $p' "$*"
}

ORIG_DIR="$(Realpath .)"
LAB_DIR="$(git rev-parse --show-toplevel)"
LAB_NAME="${LAB_DIR//.*\///}"

SCRIPT="$(dirname "$(Realpath "$0")")/utils.bash"
if [[ -x "${SCRIPT}" ]]; then
  # shellcheck source=utils.bash disable=SC1091
  source "${SCRIPT}" "$0"
else
  echo "Error: Missing ${SCRIPT}" 1>&2; exit 1
fi
SetupLogdir "$0"

if [[ -z "${LAB_DIR}" ]]; then
  Error "This script must be run from within a valid set of exercises"
fi
_do cd "${LAB_DIR}" || Die "Unable to find working path from '${ORIG_DIR}'"

#-------------------------------------------------------------------------------
function Clean_exercise() {
  Info "Cleaning $*"
  rm -fr "$@"
  git checkout "$@";
}

function Do_exercise() {
  echo ""
  Ruler -blu "${1}"
  _do rsync -av "${1}/" "${2}/";
  _do make -C "${2}" clean run || echo "# FAILED ${1}";
# make -C "${2}" stats;
}

#-------------------------------------------------------------------------------
Info "$(date "+Regression test %c %Z") for ${LAB_NAME}"

if [[ $# == 0 ]]; then
  for f in ./ex[0-9]* ; do
    Clean_exercise "${f}"
  done
else
  for f in "$@"; do
    Clean_exercise "${f//?part*}"
  done
fi

if [[ $# == 0 ]]; then
  (
    for f in ex[0-9]*; do
      if [[ -d "answers/${f}/part1" ]]; then
        # Exercises that have multiple parts
        for p in "answers/${f}/part"*; do
          Do_exercise "${p}" "${f}"
        done
      else
        Do_exercise "answers/${f}" "${f}"
      fi
    done
  ) 2>&1 | Log
else
  (
    for f in "$@"; do
      if [[ "${f}" =~ / ]]; then
        p="${f}"
        f="$(dirname "${f}")"
        Do_exercise "answers/${p}" "${f}"
      else
        Do_exercise "answers/${f}" "${f}"
      fi
    done
  ) 2>&1 | Log
fi

Echo ""
Ruler -blue Summary
FAILURES="$(grep -c FAIL "${LOGFILE:?}")"
if [[ ${FAILURES} == 0 ]]; then
  Info -grn "# Passed all tests"
else
  grep FAILED "${LOGFILE:?}"
  Error "# Failed ${FAILURES} tests"
fi
Info "$(date "+# Completed %c %Z") from ${LAB_NAME}"
Ruler -blu
Info "REMINDER: Exercises are not clean."
Info "Results in $(realpath "${LOGFILE:?}")"
