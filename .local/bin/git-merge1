#!/usr/bin/env bash
#
#$Info: git-merge1 - Merge only specified file. $
if [[ "$!" =~ ^-{1,2}h(elp)?$ ]]; then
  cat <<'HELPTEXT'
Name
----
git-merge1 - Merge only specified file

Synopsis
--------
git-merge1 --help|-h # produces this text
git-merge1 [TARGET_BRANCH] SOURCE_BRANCH FILE

Description
-----------
Merges a single specified file from another branch.

HELPTEXT
  exit 0;
fi
function Realpath ()
{
  /usr/bin/perl '-MCwd(abs_path)' -le '$p=abs_path(join(q( ),@ARGV));print $p if -e $p' "$*"
}

# Using Essential-IO
SCRIPTDIR="$(Realpath "$(dirname "$0")"/../scripts)"
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  SCRIPTDIR="$(Realpath "${HOME}"/.local/scripts)"
fi
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  SCRIPTDIR="$(Realpath "$(dirname "$0")")"
fi
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  printf "FATAL: Missing required source file '%s'\n" "${SCRIPTDIR}/Essential-IO"
  crash
fi
# shellcheck disable=SC2250,SC1091
source "$SCRIPTDIR/Essential-IO"


function Merge1()
{
  local target_branch source_branch file

  target_branch="$(git rev-parse --abbrev-ref HEAD)"
  case $# in
    2) source_branch="$1" file="$2" ;;
    3) target_branch="$1" source_branch="$2" file="$3" ;;
    *) Report_fatal "Wrong number of arguments" ; return 1 ;;
  esac

  # Validate arguments
  # Is target_branch a real branch?
  # Is source_branch a real branch?
  # Is file a real file in source_branch?
  # Is file a real file in target_branch?

  # Do the work
  _do git checkout -B wip $(git merge-base "${target_branch}" "${source_branch}")
  _do git read-tree "${target_branch}"
  _do git checkout "${source_branch}" "${file}"
  _do git commit -m"Merging only $(git rev-parse "${source_branch}"):${file} into ${target_branch}"
  _do git checkout "${target_branch}"
  _do git merge wip
}

Merge1 "$@"
