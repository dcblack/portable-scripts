#!/usr/bin/env bash
#
if [[ "$!" =~ ^-{1,2}h(elp)?$ ]]; then
  cat <<'HELPTEXT'
Name
----
build-ninja - Install the ninja build system, an alternative to `make`

Synopsis
--------
build-ninja --help|-h # produces this text
build-ninja

Description
-----------
Installs the [ninja build system](https://ninja-build.org)

HELPTEXT
  exit 0;
fi

GIT_URL="https://github.com/ninja-build/ninja.git"

#
# shellcheck disable=SC2312

#-------------------------------------------------------------------------------
# Make things more visible in the output

function Ruler() {
  /usr/bin/perl -le 'printf qq{\n%80.80s\n},"@ARGV"x80' "$*"
}

# Ensure that error messages are clearly seen
function Die() {
  local CRED CGRN CBLU NONE
  CRED="[31m" CGRN="[32m" CBLU="[34m" NONE="[00m"

  Ruler '!'
  echo "${CRED}Fatal: $*${NONE}" 1>&2
  exit 1
}

function Report_info() {
  local CRED CGRN CBLU NONE
  CRED="[31m" CGRN="[32m" CBLU="[34m" NONE="[00m"

  Ruler '-'
  echo "${CGRN}Report_info: ${CBLU}$*${NONE}"
}

#-------------------------------------------------------------------------------
SRC=~/.local/src
mkdir -p "${SRC}"
cd "${SRC}" || Die "Unable to enter source directory ${SRC}"
echo "Fetching ninja"
git clone "${GIT_URL}" || Die "Unable to clone"
cd ninja || Die "Unable to enter repo"
echo "Configuring ninja"
git checkout release
cmake
cmake -B build-cmake -H.
cmake --build build-cmake
build-cmake/ninja_test
rsync -av build-cmake/ninja ~/.local/bin/

# The end
