#!/usr/bin/env bash
#
# os - 
if [[ "$1" =~ ^-{1,2}h(elp)?$ ]]; then
  cat <<'HELPTEXT'
Name
----
os - display the operating system name.

Synopsis
--------
os --help|-h # produces this text
os [-1|-v]

Description
-----------
Displays information about the operating system.

HELPTEXT
  exit 0;
fi

function Realpath ()
{
  /usr/bin/perl '-MCwd(abs_path)' -le '$p=abs_path(join(q( ),@ARGV));print $p if -e $p' "$*"
}
SCRIPTDIR="$(Realpath "$(dirname "$0")"/../scripts)"
if [[ ! -d "${SCRIPTDIR}" ]]; then
  printf "FATAL: Missing required directory '%s'\n" "${SCRIPTDIR}"
  exit 1
fi
# shellcheck disable=SC2250,SC1091,SC1090
source "$SCRIPTDIR/Essential-IO"

function Os_main()
{
  local OS 
  OS="$(uname -s)"
  if [[ "${OS}" != "Darwin" && -r /etc/os-release ]]; then
    OS="$(perl -lne 'if(m{PRETTY_NAME="([^"]+)"}){$os=$1;$os=~s{Oracle}{CentOS};print $os;}' /etc/os-release)"
  fi

  # Parse command options
  local VERBOSE SUCCINCT
  VERBOSE=0
  SUCCINCT=0
  while [[ $# -gt 0 ]]; do
    if [[ "$1" =~ ^-{1,2}v(erbose)?$ ]]; then
      VERBOSE=1
    elif [[ "$1" == "-1" ]]; then
      VERBOSE=0
      SUCCINCT=1
    else
      Report_error "Unknown option $1" 1>&2
      exit 1
    fi
    shift
  done


  if [[ ${VERBOSE} == 0 ]]; then
    if [[ ${SUCCINCT} == 1 ]]; then
      echo "${OS/ *}"
    else
      echo "${OS}"
    fi
    return
  fi

  _do uname -a
  case "${OS}" in
    Darwin)
      _do /usr/bin/sw_vers
      ;;
    *)
      if [[ -r /etc/os-release ]]; then
        _do cat /etc/os-release
      fi
      ;;
  esac
}

Os_main "$@"
