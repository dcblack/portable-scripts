#!/usr/bin/env bash
#
#$Info: lmstart - Start flex license manager. $

function Realpath()
{
  if [[ $# == 0 ]]; then set - .; fi
  /usr/bin/perl '-MCwd(abs_path)' -le '$p=abs_path(join(q( ),@ARGV));print $p if -e $p' "$*"
}

# Using Essential-IO & Essential-manip
SCRIPTDIR="$(Realpath "$(dirname "$0")"/../scripts)"
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  SCRIPTDIR="$(Realpath "${HOME}"/.local/scripts)"
fi
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  SCRIPTDIR="$(Realpath "$(dirname "$0")")"
fi
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  printf "FATAL: Missing required source file '%s'\n" "${SCRIPTDIR}/Essential-IO"
  exit 1
fi
for SCRIPT in Essential-IO Essential-manip; do
  # shellcheck disable=SC1090,SC2250,SC1091
  source "$SCRIPTDIR/$SCRIPT"
done

function LmStart()
{
  export LM_LICENSE_FILE LM_LICENSE_DIR
  local LICENSE_FILE
  LICENSE_FILE="license.dat"
  LOGFILE="$(pwd)/flexlm.log"

  while [[ "$1" =~ ^- ]]; do
    case "$1" in
      -d|-dir)
        if [[ $# -gt 0 && -n "$2" && -r "$2" ]]; then
          LM_LICENSE_DIR="$2"
          shift
        else
          Report_error "-d requires a reference to a directory containing ${LICENSE_FILE}"
        fi
        ;;
      -f|-file)
        if [[ $# -gt 0 && -n "$2" && -r "$2" ]]; then
          LM_LICENSE_FILE="$2"
          shift
        else
          Report_error "-f requires a reference to a readable configuration file"
        fi
        ;;
      -l|-log)
        if [[ $# -gt 0 && -n "$2" ]]; then
          if [[ ! -e "$2" ]]; then
            touch "$2"
          fi
          LOGFILE="$(Realpath "$2")"
          shift
        else
          Report_error "-f requires a reference to a readable configuration file"
        fi
        ;;
      *) Report_warning "Ignoring unknown option: $1"
    esac
    shift
  done

  if [[ ! -w "${LOGFILE}" ]]; then
    Report_fatal "Unable to write logfile ${LOGFILE}"
  fi
  printf "\n\n\n----------------------------------------------------------------\n" >>"${LOGFILE}"
  date '+Starting lmgrd: %c' >>"${LOGFILE}"

  if [[ -z "${LM_LICENSE_DIR}" ]]; then
    if [[ -r "${LM_LICENSE_FILE}" ]]; then
      LM_LICENSE_DIR="$(dirname "${LM_LICENSE_FILE}")"
    else
      Report_fatal "Please set LM_LICENSE_DIR to reference the directory where ${LICENSE_FILE} exists" || exit 1
    fi
  fi
  _do spawn lmgrd -f "${LM_LICENSE_DIR}/${LICENSE_FILE}" -l "${LOGFILE}"
}

LmStart "$@"

