#!/usr/bin/env bash
#
#$Info: cmake-p - {:ONE_LINE_DESCRIPTION_HERE:}. $

function Realpath ()
{
  /usr/bin/perl '-MCwd(abs_path)' -le '$p=abs_path(join(q( ),@ARGV));print $p if -e $p' "$*"
}

# Using Essential-IO
SCRIPTDIR="$(Realpath "$(dirname "$0")"/../scripts)"
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  SCRIPTDIR="$(Realpath "${HOME}"/.local/scripts)"
fi
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  SCRIPTDIR="$(Realpath "$(dirname "$0")")"
fi
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  printf "FATAL: Missing required source file '%s'\n" "${SCRIPTDIR}/Essential-IO"
  crash
fi
# shellcheck disable=SC2250,SC1091
source "$SCRIPTDIR/Essential-IO"

DEBUG=0
if [[ "$1" =~ ^-{1,2}debug ]]; then
  DEBUG=1
fi
CMAKE_VERSION="$(perl -le 'qx{cmake --version}=~m{cmake version ([0-9.]+)};print $1')"

TMPDIR="$(mktemp -d /tmp/cmake-p-XXX)"
SRCDIR="${TMPDIR}/src"
BLDDIR="${TMPDIR}/bld"
mkdir -p "${SRCDIR}"
cat >"${SRCDIR}/CMakeLists.txt" <<EOF
cmake_minimum_required( VERSION ${CMAKE_VERSION} )
project( cmake-p LANGUAGES CXX )
add_executable( hello "hello.cpp" )
EOF
cat >"${SRCDIR}/hello.cpp" <<EOF
#include <iostream>
int main() {
  std::cout << "Hello world\n";
  return 0;
}
EOF
cmake -S "${SRCDIR}" -B "${BLDDIR}"
cmake -B "${BLDDIR}" -P "$@"

if [[ ${DEBUG} == 0 ]]; then
  rm -fr "${TMPDIR}"
else
  echo "Created ${TMPDIR}"
fi
