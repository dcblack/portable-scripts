#!/usr/bin/env bash
#
#$Info: enable-has-process - Re-enable commented out SC_HAS_PROCESS. $

if [[ "$!" =~ ^-{1,2}h(elp)?$ ]]; then
  cat <<'HELPTEXT'
Name
----
enable-has-process - Re-enable commented out SC_HAS_PROCESS

Synopsis
--------
enable-has-process --help|-h # produces this text
enable-has-process

Description
-----------
Modifies all C++ files at or below point of invocation to
uncomments SC_HAS_PROCESS lines to make code compatible
with SystemC IEEE-1666-2011 libraries.

Only works inside a git repository.

HELPTEXT
  exit 0;
fi
function Realpath ()
{
  /usr/bin/perl '-MCwd(abs_path)' -le '$p=abs_path(join(q( ),@ARGV));print $p if -e $p' "$*"
}

#-------------------------------------------------------------------------------
# Using Essential-IO
#-------------------------------------------------------------------------------
SCRIPTDIR="$(Realpath "$(dirname "$0")"/../scripts)"
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  SCRIPTDIR="$(Realpath "${HOME}"/.local/scripts)"
fi
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  SCRIPTDIR="$(Realpath "$(dirname "$0")")"
fi
if [[ ! -r "${SCRIPTDIR}/Essential-IO" ]]; then
  printf "FATAL: Missing required source file '%s'\n" "${SCRIPTDIR}/Essential-IO"
  crash
fi
# shellcheck disable=SC2250,SC1091
source "$SCRIPTDIR/Essential-IO"

#-------------------------------------------------------------------------------
# Validate
#-------------------------------------------------------------------------------
GIT_WORK_PATH="$(git rev-parse --show-toplevel 2>/dev/null)"
if [[ -z "${GIT_WORK_PATH}" ]]; then
  Report_fatal "Must work out of git repo"
  exit 1
fi

#-------------------------------------------------------------------------------
# Uncomment
#-------------------------------------------------------------------------------
PERLSCRIPT='s{// *SC_HAS_PROCESS}{SC_HAS_PROCESS}'
FILES=( $(ag --cpp -l --nocolor -s '//SC_HAS_PROCESS') )
for F in ${FILES[@]}; do
  perl -pi -e "${PERLSCRIPT}" "${F}"
done

