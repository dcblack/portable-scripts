#!/usr/bin/env bash
#
# Install the latest or specified version of git

echo "ERROR: Not yet complete" 1>&2
exit 1

#-------------------------------------------------------------------------------
# Defaults
#-------------------------------------------------------------------------------
CLEAN=0
DEBUG=0
# Following for the non-git approach where you need to specify the version
MAJVERS=2
MINVERS=3
DOTVERS=1

#-------------------------------------------------------------------------------
# Scan command-line for options
#-------------------------------------------------------------------------------
if [[ "${TYPE}" == "" ]]; then
  TYPE=-git # use -git or -wget or -curl
fi

while [[ $# != 0 ]]; do
  case "" in
  -h|-help)
    /usr/bin/perl -ne ' = ${ARGV}; $p =~ s{.*/}{}; if ( $_ =~ s{^#\|}{} ) { $_ =~ s{\$0}{$p}; print; }' $0;
#|
#|NAME
#|----
#|
#|   - Download, build and install cmake from source
#|
#|SYNOPSIS
#|--------
#|
#|   -help
#|   [-clean] [-debug] -git|-wget|-curl
#|
#|DESCRIPTION
#|-----------
#|
#|  Downloads, unpacks, builds and installs the latest or specified version of cmake.
#|
    exit 0;
    ;;
  -git|-wget|-curl)
    TYPE="";
    shift;
    ;;
  -d|-debug|--debug)
    DEBUG=1;
    CLEAN=0;
    shift;
    ;;
  --clean|-clean)
    CLEAN=1;
    shift;
    ;;
  *)
    echo "ERROR: Unkhown option ";
    exit 1;
    ;;
  esac
done

export HOME USER
USER="$(whoami)"
HOME="$(getent passwd "${USER}" | cut -d: -f6 || true)"
cd ~ || Die "Unable to cd to ${HOME}"
mkdir -p .local/src
cd .local/src
export CMAKE_INSTALL_PREFIX="${HOME}/.local"

sudo yum install dh-autoreconf curl-devel expat-devel gettext-devel openssl-devel perl-devel zlib-devel
sudo yum install asciidoc xmlto docbook2X

if [[ "${TYPE}" == "-git" ]]; then
 
  echo "Cloning git"
  GIT_URL="https://github.com/git/git.git"
  git clone "${GIT_URL}" && cd git
  echo "Building git"
  make prefix=MAKE_INSTALL_PREFIX all doc info

else
  VERSION=AJVERS.${MINVERS}.${DOTVERS}
  FILE="cmake-ERSION.tar.gz"
  TAR_URL=""
  echo "Fetching cmake"
  # Assumed to be under latest; otherwise, use ${MAJOR}.${MINOR}
  if [[ "${TYPE}" == "-wget" ]]; then
    echo "% wget ${TAR_URL}"
    wget "${TAR_URL}" || exit 1
  else
    echo "% curl -output ILE ${TAR_URL}"
    curl -output ILE ${TAR_URL} || exit 1
  fi
  echo "Expanding cmake tarball"
  echo "% tar zxvf cmake-ERSION.tar.gz"
  tar zxvf cmake-ERSION.tar.gz || exit 1
  echo "% cd cmake-ERSION"
  cd cmake-ERSION
  echo "Configuring cmake"
  echo "% ./bootstrap --prefix=${HOME}/.local"
  ./bootstrap --prefix=${HOME}/.local || exit 1
  echo "Building  cmake"
  echo "% make -j$(nproc)"
  make -j$(nproc) || exit 1
  echo "Installing  cmake"
  echo "% make install"
  make install
fi

cd
cmake --version

